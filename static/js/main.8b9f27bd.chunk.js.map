{"version":3,"sources":["types/TzktApiTypes.ts","types/TokenHelperTypes.ts","utils/TokenUtils.ts","contexts/TezosPrice.tsx","utils/TokenFormatter.ts","utils/AccountUtils.ts","contexts/TezosAccount.tsx","components/MainAppBar.tsx","contexts/TokenList.tsx","components/SearchBar.tsx","utils/TokenPrice.ts","contexts/TokenPriceHistory.tsx","components/TokenPriceChart.tsx","contexts/TokenSupplyInfo.tsx","components/TokenDetails.tsx","pages/TokenPage.tsx","pages/HomePage.tsx","components/AccountBalanceList.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/ApiUtils.ts"],"names":["isIPFSTokenInfo","tokenInfo","undefined","getTokenContractAddress","tokenAddress","isFA12TokenAddress","address","isFA2TokenAddress","isTokenAddressEqual","address1","address2","tokenId","toNumber","isFA2TokenAddressEqual","priceOracleAddress","tzktUrl","quipusFA12FactoryAddress","quipusFA2FactoryAddress","fetchQuipusFactoryTokens","factoryAddress","a","fetchQuipusFactoryStorage","fa2FactoryStorage","fetchBigMapKeys","token_to_exchange","tokenToDexArray","tTokens","map","data","key","dexAddress","value","fetchQuipusFA12Tokens","Promise","all","tToken","fetchToken","token","allTokens","tokens","filter","fetchQuipusFA2Tokens","BigNumber","nat","fetchTokenContractStorage","fetchContractStorage","contractAddress","level","fetchJson","fetchContractStorageHistory","count","fetchContract","type","getTokenInfo","fetchTokenInfo","alias","name","symbol","decimals","tokenInfoOrUndefined","tokenContractStorage","contractOwner","admin","totalSupply","assets","total_supply","getTokenAmount","console","log","ownerAddress","fetchCurrentTokenPriceInTezos","fetchDexData","priceInTezos","tezosPool","dividedBy","tokenPool","getQuipusDexDataFromStorage","storage","tokenDecimals","last_update_time","token_address","token_pool","tez_pool","lastUpdateTime","Date","fetchTokenDecimals","rawData","fetchDexDataHistory","history","hasTokenInfoProperty","metadata","token_info","toString","tzktTokenInfo","token_metadata_map","rawIPFSUrl","tryHexToString","cleanedIPFSUrl","substring","indexOf","ipfsUrl","replace","hexToString","tokenInfoRaw","parseInt","description","thumbnailUri","startsWith","fetchTokenSupplyInfo","holderToBalanceMap","holders","Object","entries","balance","circulatingSupply","values","number","reduce","prev","curr","plus","id","bigMap","fetchTezosPriceInUsd","usdPrice","nat_0","timestamp","usd","hexString","e","Buffer","from","amount","s","c","_isBigNumber","TezosPriceContext","React","createContext","TezosPriceProvider","props","useState","tezosPrice","setTezosPrice","useEffect","then","price","Provider","children","formatAmount","formatOptions","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","toLocaleString","navigator","language","formatUsdAmount","isSmallAmount","fetchAccountTokenBalances","accountAddress","balances","offset","length","forEach","push","bcdBalance","contract","token_id","exponentiatedBy","Tezos","TezosToolkit","wallet","BeaconWallet","setWalletProvider","TezosAccountContext","TezosAccountProvider","tezosAccount","setTezosAccount","loadAccount","account","tz","getBalance","tokenBalances","client","getActiveAccount","activeAccount","fetchWallet","connectWallet","useCallback","requestPermissions","permissions","accountInfo","connectWalletAsync","disconnectWallet","clearActiveAccount","disconnectWalletAsync","useStyles","makeStyles","theme","spacer","flexGrow","small","width","spacing","height","onPrimary","color","palette","text","primary","tezosPriceContainer","display","alignItems","marginRight","MainAppBar","walletButtonText","classes","useContext","mutezBalance","onWalletButtonClick","AppBar","position","style","zIndex","Toolbar","Link","variant","component","href","className","Box","marginLeft","Avatar","src","Typography","IconButton","aria-label","onClick","onRightMenuClick","edge","toFixed","Button","TokenListContext","TokenListProvider","setTokens","fa12Tokens","fa2Tokens","fetchTokens","hintColor","hint","SearchBar","useHistory","tokenList","query","setQuery","onSubmit","event","preventDefault","Autocomplete","freeSolo","autoHighlight","autoSelect","loading","options","groupBy","option","getOptionLabel","quipusToken","getOptionSelected","currentTokenAddress","onChange","reason","onSearchToken","filterOptions","inputValue","sortedFA12Tokens","matchSorter","keys","threshold","rankings","EQUAL","sortedFA2Tokens","renderOption","selected","renderInput","params","TextField","placeholder","InputProps","startAdornment","InputAdornment","transaction","tokenPrice","blockLevel","tezosPriceAtTransaction","tokenPriceUsd","multipliedBy","time","TokenPriceHistoryContext","TokenPriceHistoryProvider","priceHistory","setPriceHistory","fetchPriceHistoryData","TokenPriceChart","chartPrecision","dataPoint","Math","min","Number","MAX_VALUE","toPrecision","split","minMove","pow","autoWidth","darkTheme","alignLabels","timeScale","rightOffset","barSpacing","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","borderVisible","borderColor","visible","timeVisible","lineSeries","priceFormat","precision","TokenSupplyInfoContext","TokenSupplyInfoProvider","tokenSupplyInfo","setTokenSupplyInfo","light","textAlign","big","chipContainer","details","marginTop","TokenDetails","tezosPerToken","setToken","setQuipusToken","dexData","setDexData","liquidityUsd","fullyDilutedMarketCapTezos","fullyDilutedMarketCapUsd","find","loadTokenDetails","alt","backgroundColor","flex","marginY","Chip","label","icon","clipboard","writeText","url","window","open","viewOnTzkt","viewOnQuipuSwap","Alert","severity","formatTokenAmount","TokenPage","useParams","useMemo","Container","HomePage","gutterBottom","notEmpty","AccountBalanceList","accountInteractions","tokenPrices","setTokenPrices","tokenBalance","Map","tokenPriceInTezos","set","fetchTokenPrices","padding","secondaryText","has","get","ListItem","ListItemText","secondary","JSON","stringify","root","App","createMuiTheme","blue","isDrawerOpen","setDrawerOpen","drawerVariant","useMediaQuery","breakpoints","up","ThemeProvider","CssBaseline","Drawer","anchor","onClose","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","fetch","response","status","json"],"mappings":"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","file":"static/js/main.8b9f27bd.chunk.js","sourcesContent":["export type QuipusFactoryAddress = string;\r\n\r\nexport type TzktFA2TokenAddress = {\r\n  address: string,\r\n  nat: string,\r\n}\r\n\r\n// TOKENS\r\nexport type TzktQuipusFA2Token = {\r\n  address: TzktFA2TokenAddress,\r\n  dexAddress: string,\r\n}\r\n\r\nexport type TzktQuipusFA12Token = {\r\n  address: string,\r\n  dexAddress: string,\r\n}\r\nexport type TzktQuipusToken = TzktQuipusFA12Token | TzktQuipusFA2Token;\r\n\r\nexport type TzktContractStorage = {\r\n  metadata: BigMapAddress,\r\n}\r\n\r\nexport type TzktQuipusFactoryStorage = TzktContractStorage & {\r\n  token_to_exchange: BigMapAddress,\r\n}\r\n\r\nexport type TzktAlias = {\r\n  name?: string,\r\n  address?: string,\r\n}\r\n\r\nexport type BigMapAddress = number;\r\n\r\nexport type ContractMetadata = BigMap;\r\n\r\nexport type BigMap = {\r\n  active: boolean,\r\n  contract?: TzktAlias,\r\n}\r\n\r\nexport type TzktContract = {\r\n  type: 'user' | 'delegate' | 'contract' | 'empty',\r\n  tzips: TzktTzip[],\r\n  alias: string,\r\n  address: string,\r\n  creator: {\r\n    alias?: string,\r\n    address: string,\r\n  },\r\n}\r\n\r\nexport type TzktTokenStorage = TzktContractStorage & {\r\n  admin: {\r\n    admin?: string,\r\n  } | string,\r\n  assets?: {\r\n    total_supply: string,\r\n  },\r\n}\r\n\r\nexport type TzktQuipusDexStorage = TzktContractStorage & {\r\n  storage: {\r\n    last_update_time: string,\r\n    tez_pool: string,\r\n    token_pool: string,\r\n    token_address: string,\r\n  }\r\n}\r\n\r\nexport type TzktTezosPriceOracleStorage = TzktContractStorage & {\r\n  nat_0: string, //xtzusd\r\n  nat_1: string, //usdchf\r\n  nat_2: string, //xtzchf\r\n  timestamp: string,\r\n}\r\n\r\nexport type TzktSingleTokenMetadata = {\r\n  value: {\r\n    map: TzktTokenInfo,\r\n  } | {\r\n    token_info: TzktTokenInfo,\r\n  }\r\n}\r\n\r\nexport type TzktTokenMetadata = TzktSingleTokenMetadata[];\r\n\r\nexport type TzktTokenInfo = TokenInfoRaw | IPFSTokenInfo;\r\n\r\nexport type TokenInfoRaw = {\r\n  name?: string,\r\n  symbol: string,\r\n  decimals: string,\r\n  description?: string,\r\n  thumbnailUri?: string,\r\n}\r\n\r\nexport type IPFSTokenInfo = {\r\n  \"\": string,\r\n}\r\n\r\nexport function isIPFSTokenInfo(tokenInfo: TzktTokenInfo) : tokenInfo is IPFSTokenInfo {\r\n  return (tokenInfo as any)[\"\"] !== undefined;\r\n}\r\n\r\nexport type TzktTzip = 'fa12' | 'fa2';\r\n\r\n\r\nexport type QuipusDexDataHistory = QuipusDexTransaction[];\r\n\r\nexport type QuipusDexTransaction = {\r\n  level: number,\r\n  timestamp: string,\r\n  operation: {\r\n    hash: string,\r\n    parameter: {\r\n      value: {\r\n        // some stuff\r\n      },\r\n    },\r\n  },\r\n  value: TzktQuipusDexStorage,\r\n}\r\n","import BigNumber from 'bignumber.js';\r\n\r\ntype BaseToken = {\r\n  name: string,\r\n  ownerAddress?: string,\r\n  totalSupply?: BigNumber,\r\n  description?: string,\r\n  thumbnailUri?: string,\r\n  symbol: string,\r\n  decimals: number,\r\n}\r\n\r\nexport type FA12Token = BaseToken & {\r\n  address: FA12TokenAddress,\r\n  type: 'fa12',\r\n}\r\n\r\nexport type FA2Token = BaseToken & {\r\n  address: FA2TokenAddress,\r\n  type: 'fa2',\r\n}\r\n\r\nexport type Token = FA12Token | FA2Token;\r\n\r\nexport type FA12TokenAddress = string;\r\n\r\nexport type FA2TokenAddress = {\r\n  address: string,\r\n  tokenId: BigNumber,\r\n}\r\n\r\nexport type TokenAddress = FA12TokenAddress | FA2TokenAddress;\r\n\r\nexport function getTokenContractAddress(tokenAddress: TokenAddress): string {\r\n  return isFA12TokenAddress(tokenAddress) ? tokenAddress : tokenAddress.address;\r\n}\r\n\r\nexport function isFA12TokenAddress(address: TokenAddress): address is FA12TokenAddress {\r\n  return !isFA2TokenAddress(address);\r\n}\r\n\r\nexport function isFA2TokenAddress(address: TokenAddress): address is FA2TokenAddress {\r\n  return (address as any).address !== undefined;\r\n}\r\n\r\nexport function isTokenAddressEqual(address1: TokenAddress, address2: TokenAddress) {\r\n  if (isFA2TokenAddress(address1) && isFA2TokenAddress(address2)) {\r\n    return isFA2TokenAddressEqual(address1, address2);\r\n  } else if (isFA12TokenAddress(address1) && isFA12TokenAddress(address2)) {\r\n    return address1 === address2;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction isFA2TokenAddressEqual(address1: FA2TokenAddress, address2: FA2TokenAddress) {\r\n  return address1.address === address2.address\r\n          && address1.tokenId.toNumber() === address2.tokenId.toNumber();\r\n}\r\n\r\nexport type QuipusFA12Token = FA12Token & {\r\n  dexAddress: string,\r\n}\r\n\r\nexport type QuipusFA2Token = FA2Token & {\r\n  dexAddress: string,\r\n}\r\n\r\nexport type QuipusToken = QuipusFA12Token | QuipusFA2Token;\r\n\r\nexport type TokenInfo = {\r\n  name: string,\r\n  symbol: string,\r\n  decimals: number,\r\n  description?: string,\r\n  thumbnailUri?: string,\r\n}\r\n\r\nexport type QuipusDexData = {\r\n  tokenAddress: string,\r\n  lastUpdateTime: Date,\r\n  tezosPool: BigNumber,\r\n  tokenPool: BigNumber,\r\n}\r\n\r\nexport type TezosPriceOracle = {\r\n  usd: number,\r\n  timestamp: Date,\r\n}\r\n\r\nexport type TokenHolder = {\r\n  address: string,\r\n  balance: BigNumber,\r\n}\r\n\r\nexport type TokenSupplyInfo = {\r\n  circulatingSupply: BigNumber,\r\n  holders: TokenHolder[],\r\n}","import BigNumber from 'bignumber.js';\r\nimport { QuipusFA2Token, FA2TokenAddress, Token, QuipusDexData, TokenInfo, TezosPriceOracle, QuipusFA12Token, FA12Token, FA2Token, isFA12TokenAddress, TokenAddress, getTokenContractAddress, TokenSupplyInfo, TokenHolder, QuipusToken } from 'types/TokenHelperTypes';\r\nimport { QuipusFactoryAddress, TzktQuipusToken, TzktQuipusFA2Token, TzktQuipusFA12Token, TzktTokenStorage, TzktQuipusFactoryStorage, TzktContractStorage, TzktContract, TzktQuipusDexStorage, TzktSingleTokenMetadata, TzktTokenInfo, TokenInfoRaw, isIPFSTokenInfo, TzktTezosPriceOracleStorage, TzktTzip, QuipusDexDataHistory } from 'types/TzktApiTypes';\r\nimport { fetchJson } from './ApiUtils';\r\n\r\nconst priceOracleAddress = 'KT19kgnqC5VWoxktLRdRUERbyUPku9YioE8W';\r\n\r\nconst tzktUrl = 'https://api.tzkt.io/v1/';\r\n\r\nconst quipusFA12FactoryAddress = 'KT1Lw8hCoaBrHeTeMXbqHPG4sS4K1xn7yKcD';\r\nconst quipusFA2FactoryAddress = 'KT1SwH9P1Tx8a58Mm6qBExQFTcy2rwZyZiXS';\r\n\r\nasync function fetchQuipusFactoryTokens(factoryAddress: QuipusFactoryAddress): Promise<TzktQuipusToken[]> {\r\n  const fa2FactoryStorage = await fetchQuipusFactoryStorage(factoryAddress);\r\n  const tokenToDexArray = await fetchBigMapKeys(fa2FactoryStorage.token_to_exchange);\r\n  const tTokens: TzktQuipusFA2Token[] = tokenToDexArray.map((data) => {\r\n    // Key is token address, value is dex address\r\n    return {\r\n      address: data.key,\r\n      dexAddress: data.value,\r\n    }\r\n  });\r\n  return tTokens;\r\n}\r\n\r\nasync function fetchQuipusFA12Tokens(): Promise<QuipusFA12Token[]> {\r\n  const tTokens: TzktQuipusFA12Token[] = await fetchQuipusFactoryTokens(quipusFA12FactoryAddress) as TzktQuipusFA12Token[];\r\n  const allTokens = await Promise.all(tTokens.map(async (tToken: TzktQuipusFA12Token) => {\r\n    const token = await fetchToken(tToken.address) as FA12Token;\r\n    if (!token) {\r\n      return null;\r\n    }\r\n    return {\r\n      ...token,\r\n      dexAddress: tToken.dexAddress,\r\n    };\r\n  }));\r\n  const tokens = allTokens.filter((token) => token != null) as QuipusFA12Token[];\r\n  return tokens;\r\n}\r\n\r\nasync function fetchQuipusFA2Tokens(): Promise<QuipusFA2Token[]> {\r\n  const tTokens: TzktQuipusFA2Token[] = await fetchQuipusFactoryTokens(quipusFA2FactoryAddress) as TzktQuipusFA2Token[];\r\n  const allTokens = await Promise.all(tTokens.map(async (tToken: TzktQuipusFA2Token) => {\r\n    const tokenAddress: FA2TokenAddress = {\r\n      address: tToken.address.address,\r\n      tokenId: new BigNumber(tToken.address.nat),\r\n    }\r\n    const token = await fetchToken(tokenAddress) as FA2Token;\r\n    if (!token) {\r\n      return null;\r\n    }\r\n    return {\r\n      ...token,\r\n      dexAddress: tToken.dexAddress,\r\n    };\r\n  }));\r\n  const tokens = allTokens.filter((token) => token != null) as QuipusFA2Token[];\r\n  return tokens;\r\n}\r\n\r\nasync function fetchTokenContractStorage(tokenAddress: string): Promise<TzktTokenStorage> {\r\n  return await fetchContractStorage(tokenAddress) as TzktTokenStorage;\r\n}\r\n\r\nasync function fetchQuipusFactoryStorage(factoryAddress: string): Promise<TzktQuipusFactoryStorage> {\r\n  return await fetchContractStorage(factoryAddress) as TzktQuipusFactoryStorage;\r\n}\r\n\r\nasync function fetchContractStorage(contractAddress: string, level?: number): Promise<TzktContractStorage> {\r\n  return await fetchJson(tzktUrl + `contracts/${contractAddress}/storage` + (level !== undefined ? `?level=${level}` : ''));\r\n}\r\n\r\nasync function fetchContractStorageHistory(contractAddress: string, count: number): Promise<any> {\r\n  return await fetchJson(tzktUrl + `contracts/${contractAddress}/storage/history?limit=${count}`);\r\n}\r\n\r\nasync function fetchContract(contractAddress: string): Promise<TzktContract> {\r\n  return await fetchJson(tzktUrl + `contracts/${contractAddress}`);\r\n}\r\n\r\nasync function fetchToken(address: TokenAddress): Promise<Token | undefined> {\r\n  try {\r\n    const type = isFA12TokenAddress(address) ? 'fa12' : 'fa2';\r\n    const contractAddress = getTokenContractAddress(address);\r\n    const getTokenInfo = async() => {\r\n      const tokenInfo = await fetchTokenInfo(address);\r\n      if (tokenInfo)\r\n        return tokenInfo;\r\n      else {\r\n        const { alias } = await fetchContract(contractAddress);\r\n        if (!alias)\r\n          return undefined;\r\n        return {\r\n          name: alias,\r\n          symbol: alias,\r\n          decimals: 0,\r\n        };\r\n      }\r\n    };\r\n    const tokenInfoOrUndefined = await getTokenInfo();\r\n    if (!tokenInfoOrUndefined) {\r\n      return undefined;\r\n    }\r\n    const tokenInfo: TokenInfo = tokenInfoOrUndefined;\r\n    const tokenContractStorage = await fetchTokenContractStorage(contractAddress);\r\n    const contractOwner: string = tokenContractStorage.admin\r\n      ? ((tokenContractStorage.admin as any).admin ?? tokenContractStorage.admin)\r\n      : undefined;\r\n\r\n    const totalSupply = tokenContractStorage?.assets?.total_supply\r\n      ? getTokenAmount(new BigNumber(tokenContractStorage?.assets?.total_supply), tokenInfo.decimals)\r\n      : undefined;\r\n\r\n        if (address ==='shitstain')\r\n    console.log(\"i reached here\");\r\n  \r\n    return {\r\n      ownerAddress: contractOwner,\r\n      totalSupply: totalSupply,\r\n      address,\r\n      type,\r\n      ...tokenInfo,\r\n    } as Token\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nasync function fetchCurrentTokenPriceInTezos(token: QuipusToken): Promise<BigNumber> {\r\n  const data = await fetchDexData(token.address, token.dexAddress);\r\n  const priceInTezos = data.tezosPool.dividedBy(data.tokenPool);\r\n  return priceInTezos;\r\n}\r\n\r\nfunction getQuipusDexDataFromStorage(storage: TzktQuipusDexStorage, tokenDecimals: number) {\r\n  const { last_update_time, token_address, token_pool, tez_pool } = storage.storage;\r\n  const lastUpdateTime = new Date(last_update_time);\r\n  const tokenAddress = token_address;\r\n  const tokenPool = getTokenAmount(new BigNumber(token_pool), tokenDecimals);\r\n  const tezosPool = getTezosAmount(new BigNumber(tez_pool));\r\n\r\n  return {\r\n    lastUpdateTime,\r\n    tokenAddress,\r\n    tokenPool,\r\n    tezosPool,\r\n  };\r\n}\r\n\r\n// Helper functions\r\nexport async function fetchTokenDecimals(address: TokenAddress): Promise<number> {\r\n  const data = await fetchTokenInfo(address);\r\n  return data?.decimals ?? 0;\r\n}\r\n\r\nasync function fetchDexData(address: TokenAddress, dexAddress: string): Promise<QuipusDexData> {\r\n  const decimals = await fetchTokenDecimals(address);\r\n  console.log(\"decimals: \" + decimals);\r\n  const rawData = await fetchContractStorage(dexAddress) as TzktQuipusDexStorage;\r\n  return getQuipusDexDataFromStorage(rawData, decimals);\r\n}\r\n\r\nasync function fetchDexDataHistory(dexAddress: string): Promise<QuipusDexDataHistory> {\r\n  const history = await fetchContractStorageHistory(dexAddress, 1000) as QuipusDexDataHistory;\r\n  return history;\r\n}\r\n\r\nfunction hasTokenInfoProperty(metadata: TzktSingleTokenMetadata): metadata is { value: { token_info: TzktTokenInfo } } {\r\n  return (metadata.value as any).token_info !== undefined;\r\n}\r\n\r\nasync function fetchTokenInfo(address: TokenAddress): Promise<TokenInfo | null> {\r\n  let contractAddress: string;\r\n  let tokenId: string;\r\n  if (isFA12TokenAddress(address)) {\r\n    contractAddress = address;\r\n    tokenId = '0';\r\n  } else {\r\n    contractAddress = address.address;\r\n    tokenId = address.tokenId.toString();\r\n  }\r\n\r\n  const data: TzktSingleTokenMetadata = await fetchJson(tzktUrl + `contracts/${contractAddress}/bigmaps/token_metadata/keys/${tokenId}`);\r\n\r\n  if (!data || !data.value) {\r\n    return null;\r\n  }\r\n\r\n  const tzktTokenInfo: TzktTokenInfo = hasTokenInfoProperty(data) ? data.value.token_info : \r\n      ((data.value as any).map ?? (data.value as any).token_metadata_map);\r\n\r\n  let tokenInfoRaw: TokenInfoRaw;\r\n  let tokenInfo: TokenInfo;\r\n\r\n  if (isIPFSTokenInfo(tzktTokenInfo)) {\r\n    // ipfs://something\r\n    const rawIPFSUrl = tryHexToString(tzktTokenInfo[''])!;\r\n    // There is a token with some extra chars in front of \"ipfs://\"\r\n    const cleanedIPFSUrl = rawIPFSUrl.substring(rawIPFSUrl.indexOf('ipfs://'));\r\n    const ipfsUrl = cleanedIPFSUrl.replace('ipfs://', 'https://ipfs.io/ipfs/');\r\n   \r\n    tokenInfo = await fetchJson(ipfsUrl) as TokenInfo;\r\n  } else {\r\n    tokenInfoRaw = tzktTokenInfo;\r\n    tokenInfo = {\r\n      name: hexToString(tokenInfoRaw.name)!,\r\n      symbol: hexToString(tokenInfoRaw.symbol)!,\r\n      decimals: parseInt(hexToString(tokenInfoRaw.decimals)!),\r\n      description: hexToString(tokenInfoRaw.description),\r\n      thumbnailUri: hexToString(tokenInfoRaw.thumbnailUri),\r\n    }\r\n  }\r\n\r\n  // Process IPFS thumbnail URI if applicable\r\n  if (tokenInfo.thumbnailUri?.startsWith('ipfs://')) {\r\n    tokenInfo.thumbnailUri = tokenInfo.thumbnailUri!.replace('ipfs://', 'https://ipfs.io/ipfs/');\r\n  }\r\n\r\n  return tokenInfo;\r\n}\r\n\r\nasync function fetchTokenSupplyInfo(address: TokenAddress): Promise<TokenSupplyInfo> {\r\n  const contractAddress = getTokenContractAddress(address);\r\n  const tokenId = isFA12TokenAddress(address) ? 0 : address.tokenId;\r\n\r\n  // A map from holder (address string) to balance (numerical string)\r\n  const holderToBalanceMap = await fetchJson(`https://api.better-call.dev/v1/contract/mainnet/${contractAddress}/tokens/holders?token_id=${tokenId}`);\r\n  const holders = Object.entries<string>(holderToBalanceMap).map(([key, value]) => {\r\n    return {\r\n      address: key,\r\n      balance: new BigNumber(value),\r\n    } as TokenHolder;\r\n  })\r\n\r\n  const circulatingSupply: BigNumber = Object.values<string>(holderToBalanceMap)\r\n        .map((number) => new BigNumber(number))\r\n        .reduce((prev, curr) => {\r\n          return prev.plus(curr);\r\n        }, new BigNumber(0));\r\n\r\n  return {\r\n    holders,\r\n    circulatingSupply,\r\n  };\r\n}\r\n\r\nasync function fetchBigMapKeys(id: number): Promise<any[]> {\r\n  const bigMap = await fetchJson(tzktUrl + `bigmaps/${id}/keys`);\r\n  return bigMap;\r\n}\r\n\r\nasync function fetchTezosPriceInUsd(level?: number): Promise<TezosPriceOracle> {\r\n  const data = await fetchContractStorage(priceOracleAddress, level) as TzktTezosPriceOracleStorage;\r\n  const usdPrice = new BigNumber(data.nat_0).toNumber() / 100; // Price oracle stores price multiplied by 100\r\n  const timestamp = new Date(data.timestamp)\r\n  return {\r\n    usd: usdPrice,\r\n    timestamp,\r\n  }\r\n}\r\n\r\nasync function fetchTzips(address: string): Promise<TzktTzip[]> {\r\n  const data = await fetchContract(address);\r\n  return data.tzips;\r\n}\r\n\r\nfunction tryHexToString(hexString: string) {\r\n  try {\r\n    return hexToString(hexString);\r\n  } catch (e) {\r\n    return hexString;\r\n  }\r\n}\r\n\r\nfunction hexToString(hexString: string | undefined): string | undefined {\r\n  if (hexString === undefined) return undefined; \r\n  return Buffer.from(hexString, 'hex').toString();\r\n}\r\n\r\nfunction getTezosAmount(amount: BigNumber): BigNumber {\r\n  return getTokenAmount(amount, 6);\r\n}\r\n\r\nfunction getTokenAmount(amount: BigNumber, decimals: number): BigNumber {\r\n  return new BigNumber({\r\n    s: amount.s,\r\n    e: (amount.e ?? 0) - decimals,\r\n    c: amount.c,\r\n    _isBigNumber: true,\r\n  });\r\n}\r\n\r\nexport { fetchToken, fetchCurrentTokenPriceInTezos, fetchTokenSupplyInfo, fetchDexData, fetchTezosPriceInUsd, fetchQuipusFA12Tokens, fetchQuipusFA2Tokens, fetchTzips, fetchDexDataHistory, getQuipusDexDataFromStorage };\r\n","import { fetchTezosPriceInUsd } from \"utils/TokenUtils\";\r\nimport React, { PropsWithChildren, useEffect, useState } from \"react\";\r\n\r\nconst TezosPriceContext = React.createContext<number | undefined>(undefined);\r\n\r\nfunction TezosPriceProvider(props: PropsWithChildren<{}>) {\r\n  const [tezosPrice, setTezosPrice] = useState<number | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    fetchTezosPriceInUsd().then((price) => {\r\n      setTezosPrice(price.usd);\r\n    });\r\n  }, []);\r\n\r\n  return <TezosPriceContext.Provider value={tezosPrice}>\r\n    {props.children}\r\n  </TezosPriceContext.Provider>\r\n}\r\n\r\nexport { TezosPriceProvider, TezosPriceContext };","import BigNumber from 'bignumber.js';\r\n\r\nexport function formatAmount(amount: BigNumber, decimals: number | null): string {\r\n  const formatOptions: Intl.NumberFormatOptions = decimals ? {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals,\r\n  } : {\r\n    minimumSignificantDigits: 3,\r\n    maximumSignificantDigits: 3,\r\n  }\r\n  return amount.toNumber().toLocaleString(navigator.language, formatOptions);\r\n}\r\n\r\nexport function formatTezosAmount(amount: BigNumber): string {\r\n  return formatAmount(amount, 6) + ' tez';\r\n}\r\n\r\nexport function formatUsdAmount(amount: BigNumber, isSmallAmount = false): string {\r\n  return '$' + formatAmount(amount, isSmallAmount ? null : 2);\r\n}","import BigNumber from 'bignumber.js';\r\nimport { TokenBalance } from 'types/AccountTypes';\r\nimport { BcdTokenBalance } from 'types/BcdApiTypes';\r\nimport { fetchJson } from \"./ApiUtils\";\r\n\r\nexport async function fetchAccountTokenBalances(accountAddress: string): Promise<TokenBalance[]> {\r\n  const balances: BcdTokenBalance[] = [];\r\n  let offset = 0;\r\n  let data = await fetchJson(`https://api.better-call.dev/v1/account/mainnet/${accountAddress}/token_balances?sort_by=balance&offset=${offset}`);\r\n  while (data.balances.length > 0) {\r\n    data.balances.forEach((balance: BcdTokenBalance) => {\r\n      balances.push(balance);\r\n    });\r\n    offset += 10;\r\n    data = await fetchJson(`https://api.better-call.dev/v1/account/mainnet/${accountAddress}/token_balances?sort_by=balance&offset=${offset}`);\r\n  }\r\n  return balances.map((bcdBalance) => {\r\n    return {\r\n      address: {\r\n        address: bcdBalance.contract,\r\n        tokenId: new BigNumber(bcdBalance.token_id),\r\n      },\r\n      balance: new BigNumber(bcdBalance.balance).dividedBy(new BigNumber(10).exponentiatedBy(bcdBalance.decimals)),\r\n    }\r\n  });\r\n\r\n}","import BigNumber from \"bignumber.js\";\r\nimport React, { PropsWithChildren, useCallback, useEffect, useState } from \"react\";\r\nimport { AccountInfo } from \"@airgap/beacon-sdk\";\r\nimport { TezosToolkit } from \"@taquito/taquito\";\r\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\r\nimport { fetchAccountTokenBalances } from \"utils/AccountUtils\";\r\nimport { TokenBalance } from \"types/AccountTypes\";\r\n\r\ntype TezosAccount = AccountInfo & {\r\n  balance: BigNumber,\r\n  tokenBalances: TokenBalance[],\r\n}\r\n\r\ntype TezosAccountInteractions = {\r\n  connectWallet: () => void,\r\n  disconnectWallet: () => void,\r\n  account: TezosAccount | undefined, \r\n} | null\r\n\r\nconst rpcUrl: string = 'https://api.tez.ie/rpc/mainnet';\r\nconst Tezos = new TezosToolkit(rpcUrl);\r\nconst wallet = new BeaconWallet({\r\n  name: 'tzcharts',\r\n});\r\nTezos.setWalletProvider(wallet);\r\n\r\nconst TezosAccountContext = React.createContext<TezosAccountInteractions>(null);\r\n\r\nfunction TezosAccountProvider(props: PropsWithChildren<{}>) {\r\n  const [tezosAccount, setTezosAccount] = useState<TezosAccount | undefined>(undefined);\r\n\r\n  const loadAccount = async (account: AccountInfo) => {\r\n    const balance = await Tezos.tz.getBalance(account.address);\r\n    const tokenBalances = await fetchAccountTokenBalances(account.address);\r\n    console.log(\"tokenBalances!\");\r\n    console.log(tokenBalances);\r\n    setTezosAccount({\r\n      balance,\r\n      tokenBalances,\r\n      ...account,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchWallet = async () => {\r\n      const activeAccount = await wallet.client.getActiveAccount();\r\n      if (activeAccount) {\r\n        loadAccount(activeAccount);\r\n      }\r\n    }\r\n    fetchWallet();\r\n  }, []);\r\n\r\n  const connectWallet = useCallback(() => {\r\n    const connectWalletAsync = async () => {\r\n      // Try connecting\r\n      const permissions = await wallet.client.requestPermissions();\r\n      if (permissions) {\r\n        loadAccount(permissions.accountInfo);\r\n      } else {\r\n        console.log('User cancelled');\r\n      }\r\n    }\r\n    connectWalletAsync();\r\n  }, []);\r\n\r\n  const disconnectWallet = useCallback(() => {\r\n    const disconnectWalletAsync = async () => {\r\n      // Disconnect wallet\r\n      await wallet.clearActiveAccount();\r\n      setTezosAccount(undefined);\r\n    }\r\n    disconnectWalletAsync()\r\n  }, []);\r\n\r\n  return <TezosAccountContext.Provider value={{connectWallet, disconnectWallet, account: tezosAccount}}>\r\n    {props.children}\r\n  </TezosAccountContext.Provider>\r\n}\r\n\r\nexport { TezosAccountProvider, TezosAccountContext };","import BigNumber from \"bignumber.js\";\r\nimport { AppBar, Box, Toolbar, Typography, Link, Avatar, Button, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { formatUsdAmount } from \"utils/TokenFormatter\";\r\nimport { TezosPriceContext } from \"contexts/TezosPrice\";\r\nimport { TezosAccountContext } from \"contexts/TezosAccount\";\r\nimport { useContext } from \"react\";\r\n\r\ntype MainAppBarProps = {\r\n  onRightMenuClick: () => void,\r\n}\r\n\r\nconst formatBalance = (mutezBalance: BigNumber) => {\r\n  return mutezBalance.dividedBy(1000000).toFixed(2) + ' tez';\r\n}\r\n\r\nconst formatUserAddress = (address: string) => {\r\n  return address.substring(0, 5) + '...';\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacer: {\r\n    flexGrow: 1,\r\n  },\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n  },\r\n  onPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  tezosPriceContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *' : {\r\n      marginRight: theme.spacing(1),\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function MainAppBar(props: MainAppBarProps) {\r\n  const classes = useStyles();\r\n  const tezosPrice = useContext(TezosPriceContext);\r\n  const accountInteractions = useContext(TezosAccountContext);\r\n  const { account, connectWallet, disconnectWallet } = accountInteractions!;\r\n  let walletButtonText;\r\n  if (account) {\r\n    walletButtonText = 'Connected ' + formatUserAddress(account.address);\r\n  } else {\r\n    walletButtonText = 'Connect wallet';\r\n  }\r\n\r\n  const onWalletButtonClick = account ? disconnectWallet : connectWallet;\r\n\r\n  return <AppBar position=\"static\" style={{zIndex: 1400, position: 'relative'}}>\r\n    <Toolbar>\r\n      <Link variant=\"h6\" component=\"a\" href=\"/\" className={classes.onPrimary}>\r\n        tzcharts\r\n      </Link>\r\n      {\r\n        tezosPrice && <Box marginLeft={2} className={classes.tezosPriceContainer}>\r\n          <Avatar className={classes.small} src=\"https://mediashower.com/img/E8D195B2-8D67-11E8-8E97-AF63B8ECBBBA/tezos_600x.jpg\"></Avatar>\r\n          <Typography variant=\"body1\">\r\n            {formatUsdAmount(new BigNumber(tezosPrice))}\r\n          </Typography>\r\n        </Box>\r\n      }\r\n      <span className={classes.spacer}></span>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        onClick={props.onRightMenuClick}\r\n        edge=\"start\"\r\n      >\r\n        <span className=\"material-icons\">menu</span>\r\n      </IconButton>\r\n      {account && (\r\n        <Typography variant='body1'>\r\n          {formatBalance(account.balance)}\r\n        </Typography>\r\n      )}\r\n      <Button variant={account ? \"outlined\" : \"contained\"} color=\"default\"\r\n        onClick={onWalletButtonClick}>{walletButtonText}</Button>\r\n    </Toolbar>\r\n  </AppBar>\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { fetchQuipusFA12Tokens, fetchQuipusFA2Tokens } from \"utils/TokenUtils\";\r\nimport React, { PropsWithChildren, useEffect, useState } from \"react\";\r\nimport { QuipusToken } from \"types/TokenHelperTypes\";\r\n\r\nconst TokenListContext = React.createContext<QuipusToken[] | undefined>(undefined);\r\n\r\nconst debugTokenList: QuipusToken[] = [\r\n  {\r\n    ownerAddress: 'kTABCDEFGHI',\r\n    totalSupply: new BigNumber(100000000),\r\n    name: 'Crunch',\r\n    symbol: 'CRUNCH',\r\n    decimals: 5,\r\n    address: 'KT1BHCumksALJQJ8q8to2EPigPW6qpyTr7Ng',\r\n    type: 'fa12',\r\n    dexAddress: 'KT1RRgK6eXvCWCiEGWhRZCSVGzhDzwXEEjS4',\r\n  }\r\n]\r\n\r\nfunction TokenListProvider(props: PropsWithChildren<{}>) {\r\n  const [tokens, setTokens] = useState<QuipusToken[] | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async() => { \r\n      const fa12Tokens = await fetchQuipusFA12Tokens();\r\n      const fa2Tokens = await fetchQuipusFA2Tokens();\r\n      const tokens = [\r\n        ...fa12Tokens,\r\n        ...fa2Tokens,\r\n      ];\r\n      setTokens(tokens);\r\n    };\r\n    fetchTokens();\r\n    // setTokens(debugTokenList);\r\n  }, []);\r\n\r\n  return <TokenListContext.Provider value={tokens}>\r\n    {props.children}\r\n  </TokenListContext.Provider>\r\n}\r\n\r\nexport { TokenListProvider, TokenListContext };","import { IconButton, InputAdornment, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport { Autocomplete, AutocompleteChangeReason, AutocompleteRenderInputParams } from '@material-ui/lab';\r\nimport { TokenListContext } from 'contexts/TokenList';\r\nimport { matchSorter } from 'match-sorter';\r\nimport React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isTokenAddressEqual, QuipusToken, getTokenContractAddress, isFA12TokenAddress, TokenAddress } from '../types/TokenHelperTypes';\r\n\r\ntype SearchBarProps = {\r\n  currentTokenAddress: TokenAddress | null,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hintColor: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n}));\r\n\r\nfunction SearchBar(props: SearchBarProps) {\r\n  const history = useHistory();\r\n  const tokenList = useContext(TokenListContext);\r\n  const classes = useStyles();\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onSearchToken = (token: QuipusToken) => {\r\n    if (isFA12TokenAddress(token.address)) {\r\n      history.push(`/token/${token.address}`)\r\n    } else {\r\n      history.push(`/token/${token.address.address}/${token.address.tokenId}`);\r\n    }\r\n  }\r\n\r\n  const onSearchAddress = (address: string) => {\r\n    history.push(`/token/${address}`);\r\n  }\r\n\r\n  const formPreventDefault = (event: any) =>{\r\n    event.preventDefault();\r\n    onSearchAddress(query);\r\n  }\r\n\r\n  const onTextChange = (event: React.ChangeEvent<{}>, value: string | QuipusToken | null, reason: AutocompleteChangeReason) => {\r\n    if (reason === 'select-option') {\r\n      const token = value as QuipusToken;\r\n      onSearchToken(token);\r\n    } else {\r\n      setQuery(value as string);\r\n    }\r\n  }\r\n\r\n  return <form onSubmit={formPreventDefault}>\r\n     <Autocomplete\r\n      freeSolo\r\n      autoHighlight\r\n      autoSelect\r\n      loading={tokenList === undefined}\r\n      options={tokenList ?? []}\r\n      groupBy={\r\n        (option) => {\r\n          return isFA12TokenAddress(option.address) ? 'FA1.2 Tokens' : 'FA2';\r\n        }\r\n      }\r\n      getOptionLabel={(quipusToken: QuipusToken) => quipusToken.name ?? query}\r\n      getOptionSelected={(quipusToken: QuipusToken) => {\r\n        if (quipusToken.address && props.currentTokenAddress) {\r\n          return isTokenAddressEqual(quipusToken.address, props.currentTokenAddress);\r\n        } else {\r\n          return false;\r\n        }\r\n      }}\r\n      style={{ width: '100%' }}\r\n      onChange={onTextChange}\r\n      // value={query}\r\n      filterOptions={\r\n        (options, { inputValue }) => {\r\n          const fa12Tokens = options.filter((token) => token.type === 'fa12');\r\n          const fa2Tokens = options.filter((token) => token.type === 'fa2');\r\n          const sortedFA12Tokens = matchSorter(fa12Tokens, inputValue, {\r\n            keys: ['name', {threshold: matchSorter.rankings.EQUAL, key: 'address'}],\r\n          });\r\n          const sortedFA2Tokens = matchSorter(fa2Tokens, inputValue, {\r\n            keys: ['name', {threshold: matchSorter.rankings.EQUAL, key: 'address.address'}],\r\n          });\r\n\r\n          return [\r\n            ...sortedFA12Tokens,\r\n            ...sortedFA2Tokens,\r\n          ];\r\n        }\r\n      }\r\n      renderOption={(option: QuipusToken, { selected }) => (\r\n        <div>\r\n          <Typography variant=\"subtitle1\">\r\n            {option.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            {getTokenContractAddress(option.address)}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      renderInput={(params: AutocompleteRenderInputParams) =>\r\n        <TextField\r\n          {...params}\r\n          variant=\"outlined\"\r\n          placeholder=\"Search by contract name or address...\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <IconButton className={classes.hintColor}>\r\n                  <span className=\"material-icons\">search</span>\r\n\r\n                </IconButton>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      }\r\n    />\r\n  </form>\r\n}\r\n\r\n\r\nexport default SearchBar;\r\n","import { TokenAddress } from \"types/TokenHelperTypes\";\r\nimport { fetchDexDataHistory, fetchTezosPriceInUsd, fetchTokenDecimals, getQuipusDexDataFromStorage } from \"./TokenUtils\";\r\n\r\nexport type Candlestick = {\r\n  time: string,\r\n  open: number,\r\n  close: number,\r\n  high: number,\r\n  low: number,\r\n}\r\n\r\n\r\nexport type PriceDataPoint = {\r\n  time: number,\r\n  value: number,\r\n};\r\n\r\nexport async function fetchPriceHistoryData(address: TokenAddress, dexAddress: string): Promise<PriceDataPoint[]> {\r\n  const decimals = await fetchTokenDecimals(address);\r\n  const history = await fetchDexDataHistory(dexAddress);\r\n  return await Promise.all(history.map(async (transaction) => {\r\n    const storage = getQuipusDexDataFromStorage(transaction.value, decimals);\r\n    const { tokenPool, tezosPool } = storage;\r\n    const tokenPrice = tezosPool.dividedBy(tokenPool);\r\n    const blockLevel = transaction.level;\r\n    const tezosPriceAtTransaction = await fetchTezosPriceInUsd(blockLevel);\r\n    const tokenPriceUsd = tokenPrice.multipliedBy(tezosPriceAtTransaction.usd);\r\n    return {\r\n      time: +storage.lastUpdateTime / 1000,\r\n      value: tokenPriceUsd.toNumber(),\r\n    }\r\n  }));\r\n}\r\n","import { fetchPriceHistoryData, PriceDataPoint } from \"utils/TokenPrice\";\r\nimport React, { PropsWithChildren, useEffect, useState } from \"react\";\r\nimport { TokenAddress } from \"types/TokenHelperTypes\";\r\n\r\nconst TokenPriceHistoryContext = React.createContext<PriceDataPoint[]>([]);\r\n\r\ntype TokenPriceHistoryProviderProps = {\r\n  address: TokenAddress,\r\n  dexAddress: string,\r\n}\r\n\r\nfunction TokenPriceHistoryProvider(props: PropsWithChildren<TokenPriceHistoryProviderProps>) {\r\n  const [priceHistory, setPriceHistory] = useState<PriceDataPoint[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchPriceHistoryData(props.address, props.dexAddress).then((priceHistory) => {\r\n      setPriceHistory(priceHistory);\r\n    });\r\n  }, [props.address, props.dexAddress]);\r\n\r\n  return <TokenPriceHistoryContext.Provider value={priceHistory}>\r\n    {props.children}\r\n  </TokenPriceHistoryContext.Provider>\r\n}\r\n\r\nexport { TokenPriceHistoryProvider, TokenPriceHistoryContext };","import { TokenPriceHistoryContext } from \"contexts/TokenPriceHistory\";\r\nimport { useContext } from \"react\";\r\nimport Chart from 'kaktana-react-lightweight-charts';\r\n\r\nexport default function TokenPriceChart() {\r\n  const priceHistory = useContext(TokenPriceHistoryContext);\r\n  // Calculate precision based on displayed values\r\n  const lowestPrice = priceHistory.map((dataPoint) => dataPoint.value)\r\n    .reduce((prev, curr) => Math.min(prev, curr), Number.MAX_VALUE);\r\n  const chartPrecision = lowestPrice.toPrecision(3).split('.')[1]?.length ?? 2;\r\n  const minMove = Math.pow(10, -chartPrecision).toPrecision(1);\r\n  return <Chart\r\n    autoWidth\r\n    darkTheme\r\n    options={\r\n      {\r\n        alignLabels: true,\r\n        timeScale: {\r\n          rightOffset: 12,\r\n          barSpacing: 3,\r\n          fixLeftEdge: true,\r\n          lockVisibleTimeRangeOnResize: true,\r\n          rightBarStaysOnScroll: true,\r\n          borderVisible: false,\r\n          borderColor: \"#fff000\",\r\n          visible: true,\r\n          timeVisible: true,\r\n        },\r\n      }\r\n    }\r\n    lineSeries={[{\r\n      data: priceHistory,\r\n      options: {\r\n        priceFormat: {\r\n          type: 'price',\r\n          precision: chartPrecision,\r\n          minMove: minMove,\r\n        },\r\n      }\r\n    }]}\r\n  >\r\n  </Chart>\r\n}","import { fetchTokenSupplyInfo } from \"utils/TokenUtils\";\r\nimport React, { PropsWithChildren, useEffect, useState } from \"react\";\r\nimport { TokenAddress, TokenSupplyInfo } from \"types/TokenHelperTypes\";\r\n\r\nconst TokenSupplyInfoContext = React.createContext<TokenSupplyInfo | undefined>(undefined);\r\n\r\ntype TokenSupplyInfoProviderProps = {\r\n  address: TokenAddress,\r\n}\r\n\r\nfunction TokenSupplyInfoProvider(props: PropsWithChildren<TokenSupplyInfoProviderProps>) {\r\n  const [tokenSupplyInfo, setTokenSupplyInfo] = useState<TokenSupplyInfo | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    fetchTokenSupplyInfo(props.address).then((tokenSupplyInfo) => {\r\n      setTokenSupplyInfo(tokenSupplyInfo);\r\n    });\r\n  }, [props.address]);\r\n\r\n  return <TokenSupplyInfoContext.Provider value={tokenSupplyInfo}>\r\n    {props.children}\r\n  </TokenSupplyInfoContext.Provider>\r\n}\r\n\r\nexport { TokenSupplyInfoProvider, TokenSupplyInfoContext };","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport BigNumber from 'bignumber.js';\r\n\r\nimport { Avatar, Box, Chip, makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport { fetchDexData, fetchToken } from \"../utils/TokenUtils\";\r\nimport { isTokenAddressEqual, QuipusDexData, Token, TokenAddress, getTokenContractAddress, isFA12TokenAddress, QuipusToken } from \"../types/TokenHelperTypes\";\r\nimport { formatAmount, formatUsdAmount } from \"../utils/TokenFormatter\";\r\nimport { TezosPriceContext } from \"contexts/TezosPrice\";\r\nimport { TokenListContext } from \"contexts/TokenList\";\r\nimport { TokenPriceHistoryProvider } from \"contexts/TokenPriceHistory\";\r\nimport TokenPriceChart from \"components/TokenPriceChart\";\r\nimport { TokenSupplyInfoContext } from \"contexts/TokenSupplyInfo\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\ntype TokenProps = {\r\n  address: TokenAddress,\r\n}\r\n\r\nconst viewOnQuipuSwap = (address: TokenAddress) => {\r\n  const url = isFA12TokenAddress(address)\r\n    ? `https://quipuswap.com/swap?from=tez&to=${address}`\r\n    : `https://quipuswap.com/swap?from=tez&to=${address.address}_${address.tokenId}`;\r\n  window.open(url, '_blank');\r\n}\r\n\r\nconst viewOnTzkt = (address: TokenAddress) => {\r\n  const contractAddress = getTokenContractAddress(address);\r\n  const url = `https://tzkt.io/${contractAddress}`;\r\n  window.open(url, '_blank');\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  price: {\r\n    color: theme.palette.primary.light,\r\n    textAlign: 'right',\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  big: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n  chipContainer: {\r\n    '& > *': {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  },\r\n  details: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n      marginRight: theme.spacing(4),\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TokenDetails(props: TokenProps) {\r\n  const classes = useStyles();\r\n\r\n  const [token, setToken] = useState<Token | null | undefined>(undefined);\r\n  const [quipusToken, setQuipusToken] = useState<QuipusToken | null | undefined>(undefined);\r\n  const [dexData, setDexData] = useState<QuipusDexData | null | undefined>(undefined);\r\n\r\n  const tezosPrice = useContext(TezosPriceContext);\r\n  const tokenList = useContext(TokenListContext);\r\n  const tokenSupplyInfo = useContext(TokenSupplyInfoContext);\r\n  const formatTokenAmount = (amount: BigNumber, token: { decimals?: number, symbol?: string }) => {\r\n    return formatAmount(amount, token.decimals ?? 0) + ' ' + token.symbol;\r\n  }\r\n\r\n  let tezosPerToken: BigNumber;\r\n  let liquidityUsd: BigNumber | undefined = undefined;\r\n  let fullyDilutedMarketCapTezos: BigNumber | null = null;\r\n  let fullyDilutedMarketCapUsd: BigNumber | null = null;\r\n  let tokenPriceUsd: BigNumber = new BigNumber(0);\r\n  if (token && dexData) {\r\n    const tezosPool = dexData.tezosPool;\r\n    const tokenPool = dexData.tokenPool;\r\n\r\n    tezosPerToken = tezosPool.dividedBy(tokenPool);\r\n\r\n    if (tezosPrice) {\r\n      liquidityUsd = tezosPool.multipliedBy(tezosPrice).multipliedBy(2);\r\n      tokenPriceUsd = tezosPerToken.multipliedBy(tezosPrice);\r\n    }\r\n    if (token.totalSupply) {\r\n      fullyDilutedMarketCapTezos = token.totalSupply.multipliedBy(tokenPriceUsd);\r\n      if (tezosPrice) {\r\n        fullyDilutedMarketCapUsd = fullyDilutedMarketCapTezos.multipliedBy(tezosPrice);\r\n      }\r\n    }\r\n  }\r\n\r\n  const copyContractAddress = () => {\r\n    navigator.clipboard.writeText(getTokenContractAddress(props.address));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setToken(undefined);\r\n    setQuipusToken(undefined);\r\n    setDexData(undefined);\r\n    const loadTokenDetails = async (address: TokenAddress) => {\r\n      // Load details about the token\r\n      const token = await fetchToken(address);\r\n      setToken(token ?? null);\r\n      if (token && tokenList) {\r\n        const quipusToken = tokenList.find((quipusToken) => isTokenAddressEqual(quipusToken.address, address));\r\n        setQuipusToken(quipusToken);\r\n        if (quipusToken) {\r\n          const dexData = await fetchDexData(quipusToken.address, quipusToken.dexAddress);\r\n          setDexData(dexData);\r\n        } else {\r\n          setDexData(null);\r\n        }\r\n      } else {\r\n        setQuipusToken(null);\r\n        setDexData(null);\r\n      }\r\n    }\r\n    loadTokenDetails(props.address);\r\n  }, [props.address, tokenList]);\r\n  return <div>\r\n    {\r\n      token ? (\r\n        <div>\r\n          <Box display=\"flex\">\r\n            <Avatar className={classes.big} alt={token.name} src={token.thumbnailUri} style={{ backgroundColor: 'white' }} />\r\n            <Box style={{ flex: 1, marginLeft: 16 }}>\r\n              <Typography variant=\"h4\" component=\"span\">\r\n                {token.name} ({token.symbol})\r\n                      </Typography>\r\n              <Typography variant=\"h6\">\r\n                {token.description}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box marginY={1} className={classes.chipContainer}>\r\n            <Chip\r\n              label={token.type === \"fa12\" ? 'FA1.2 Token' : 'FA2 Token'}\r\n              variant=\"outlined\"\r\n            />\r\n            <Chip\r\n              icon={<span className=\"material-icons\">content_copy</span>}\r\n              label=\"Copy contract address\"\r\n              variant=\"outlined\"\r\n              onClick={copyContractAddress}\r\n            />\r\n            <Chip\r\n              icon={<span className=\"material-icons\">open_in_new</span>}\r\n              label=\"View on tzkt.io\"\r\n              variant=\"outlined\"\r\n              onClick={() => viewOnTzkt(props.address)}\r\n            />\r\n            <Chip\r\n              icon={<span className=\"material-icons\">open_in_new</span>}\r\n              label=\"View on QuipuSwap\"\r\n              variant=\"outlined\"\r\n              onClick={() => viewOnQuipuSwap(props.address)}\r\n            />\r\n          </Box>\r\n          <Box marginTop={2}>\r\n            <Alert severity=\"warning\" variant=\"outlined\">\r\n              Prices calculated from balances in QuipusSwap liquidity pool. May be incorrect.\r\n            </Alert>\r\n          </Box>\r\n          <Box className={classes.details}>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                Price:\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.price}>\r\n                {formatUsdAmount(tokenPriceUsd, true)}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                Market cap\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {tokenSupplyInfo ? formatUsdAmount(tokenSupplyInfo.circulatingSupply.multipliedBy(tokenPriceUsd)) : 'Unknown'}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                Liquidity\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {liquidityUsd ? formatUsdAmount(liquidityUsd) : 'Unknown'}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                Max supply\r\n            </Typography>\r\n              <Typography variant=\"body1\">\r\n                {token.totalSupply ? formatTokenAmount(token.totalSupply, { decimals: 0, symbol: token.symbol }) : 'Unknown'}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                Market cap (fully diluted)\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {fullyDilutedMarketCapUsd ? formatUsdAmount(fullyDilutedMarketCapUsd) : 'Unknown'}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          {\r\n            quipusToken?.dexAddress &&\r\n            <Box marginTop={2}>\r\n              <TokenPriceHistoryProvider address={quipusToken.address} dexAddress={quipusToken.dexAddress}>\r\n                <Typography variant=\"h6\">\r\n                  Chart\r\n                </Typography>\r\n                <TokenPriceChart></TokenPriceChart>\r\n              </TokenPriceHistoryProvider>\r\n            </Box>\r\n          }\r\n        </div>\r\n      ) : (\r\n        token === null\r\n          ? <Alert severity=\"error\">\r\n            No token found at ${getTokenContractAddress(props.address)}\r\n          </Alert>\r\n          : <h3>Loading...</h3>\r\n      )\r\n    }\r\n  </div >\r\n}\r\n\r\nexport default TokenDetails;","import BigNumber from \"bignumber.js\";\r\nimport { Box, Container } from \"@material-ui/core\"\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport TokenDetails from \"components/TokenDetails\";\r\nimport { getTokenContractAddress, isFA12TokenAddress, TokenAddress } from \"types/TokenHelperTypes\";\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { fetchTzips } from \"utils/TokenUtils\";\r\nimport { TokenSupplyInfoProvider } from \"contexts/TokenSupplyInfo\";\r\n\r\ntype TokenPageParams = {\r\n  address: string,\r\n  tokenId?: string,\r\n}\r\n\r\nexport default function TokenPage() {\r\n  const { address, tokenId } = useParams<TokenPageParams>();\r\n  // const history = useHistory();\r\n  const tokenAddress: TokenAddress = useMemo(() => {\r\n    return tokenId !== undefined ? {\r\n      address,\r\n      tokenId: new BigNumber(tokenId),\r\n    } : address;\r\n  }, [address, tokenId]);\r\n\r\n  // useEffect(() => {\r\n  //   // Verify that the tokenAddress is valid\r\n  //   fetchTzips(getTokenContractAddress(tokenAddress)).then((tzips) => {\r\n  //     console.log(\"fetched\");\r\n  //     if (!tzips) {\r\n  //       return false;\r\n  //     }\r\n  //     if (isFA12TokenAddress(tokenAddress)) {\r\n  //       if (!tzips.includes('fa12')) {\r\n  //         // May be actually fa2\r\n  //         history.push(`/${tokenAddress}/0`);\r\n  //         return false;\r\n  //       }\r\n  //     } else {\r\n  //       if (!tzips.includes('fa2')) {\r\n  //         return false;\r\n  //       }\r\n  //     }\r\n  //     return true;\r\n  //   }, (reason: any) => {\r\n  //     return false;\r\n  //   });\r\n  // }, [address, tokenId, tokenAddress, history]);\r\n\r\n\r\n\r\n  return <Container>\r\n    <Box marginY={2}>\r\n      <SearchBar currentTokenAddress={tokenAddress}></SearchBar>\r\n    </Box>\r\n\r\n    <TokenSupplyInfoProvider address={tokenAddress}>\r\n      <TokenDetails address={tokenAddress}></TokenDetails>\r\n    </TokenSupplyInfoProvider>\r\n  </Container>\r\n}","import { Box, Container, Typography } from \"@material-ui/core\";\r\nimport SearchBar from \"components/SearchBar\";\r\n\r\nexport default function HomePage() {\r\n  return <Container>\r\n    <Box marginY={2}>\r\n      <SearchBar currentTokenAddress={null}></SearchBar>\r\n    </Box>\r\n    <Typography variant=\"h4\" gutterBottom>\r\n      Welcome to tzcharts!\r\n    </Typography>\r\n    <Typography variant=\"body1\">\r\n      Token information is retrieved using tzkt.io and better-call.dev's APIs.\r\n      <br/>\r\n      <br/>\r\n      Token price information retrieved from QuipusSwap's FA1.2 and FA2 swap contracts.\r\n      <br/>\r\n      <br/>\r\n      This tool is currently in beta. All price information are loaded on page load,\r\n      and do not refresh automatically.\r\n    </Typography>\r\n  </Container>\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\nimport { Box, ListItem, ListItemText, Typography } from \"@material-ui/core\";\r\nimport { TezosAccountContext } from \"contexts/TezosAccount\";\r\nimport { TokenListContext } from \"contexts/TokenList\";\r\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { isTokenAddressEqual, QuipusToken, TokenAddress } from \"types/TokenHelperTypes\";\r\nimport { fetchCurrentTokenPriceInTezos } from \"utils/TokenUtils\";\r\nimport { formatUsdAmount } from \"utils/TokenFormatter\";\r\nimport { TezosPriceContext } from \"contexts/TezosPrice\";\r\n\r\n\r\ntype QuipusTokenWithBalance = QuipusToken & {\r\n  balance: BigNumber,\r\n}\r\n\r\ntype TokenPrices = Map<TokenAddress, BigNumber>;\r\n\r\nfunction notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n  return value !== null && value !== undefined;\r\n}\r\n\r\nexport default function AccountBalanceList() {\r\n  const tokenList = useContext(TokenListContext);\r\n  const accountInteractions = useContext(TezosAccountContext);\r\n  const tezosPrice = useContext(TezosPriceContext);\r\n  const [tokenPrices, setTokenPrices] = useState<TokenPrices>();\r\n  const { account } = accountInteractions!;\r\n\r\n  const tokens = useMemo(() => {\r\n    if (account && tokenList) {\r\n      const tokens = account.tokenBalances.map((tokenBalance) => {\r\n        const tokenAddress = tokenBalance.address;\r\n        console.log(tokenList);\r\n        console.log(tokenAddress);\r\n        const token = tokenList.find((token) => isTokenAddressEqual(token.address, tokenAddress));\r\n        if (token) {\r\n          return {\r\n            ...token,\r\n            balance: tokenBalance.balance,\r\n          } as QuipusTokenWithBalance;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .filter(notEmpty);\r\n      return tokens as QuipusTokenWithBalance[];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }, [account, tokenList]);\r\n\r\n  // Load token prices\r\n  useEffect(() => {\r\n    if (account && tokenList) {\r\n      setTokenPrices(undefined);\r\n      const fetchTokenPrices = async () => {\r\n        const tokenPrices = new Map<TokenAddress, BigNumber>();\r\n        await Promise.all(tokenList.map(async (token) => {\r\n          const tokenPriceInTezos = await fetchCurrentTokenPriceInTezos(token);\r\n          tokenPrices.set(token.address, tokenPriceInTezos);\r\n        }));\r\n        setTokenPrices(tokenPrices);\r\n      }\r\n      fetchTokenPrices();\r\n    } else {\r\n      setTokenPrices(undefined);\r\n    }\r\n\r\n  }, [account, tokenList]);\r\n\r\n  return <Box alignItems=\"center\">\r\n    {\r\n      tokens ?\r\n        <Box>\r\n          <Box padding={2}>\r\n            <Typography variant=\"h6\">\r\n              Balances\r\n            </Typography>\r\n          </Box>\r\n          {tokens.map((token) => {\r\n            const tokenBalance = token.balance.toString();\r\n            let secondaryText: string;\r\n            if (tokenPrices?.has(token.address) && tezosPrice) {\r\n              secondaryText = formatUsdAmount(tokenPrices.get(token.address)!.multipliedBy(tezosPrice)) + ` (${tokenBalance})`;\r\n            } else {\r\n              secondaryText = tokenBalance;\r\n            }\r\n\r\n\r\n            return <ListItem key={JSON.stringify(token.address)}>\r\n              <ListItemText\r\n                primary={token?.name}\r\n                secondary={secondaryText}\r\n              />\r\n            </ListItem>\r\n          })}\r\n        </Box>\r\n      : <Box padding={4}>\r\n        <Typography variant=\"h6\">\r\n          Connect wallet to show balances\r\n        </Typography>\r\n      </Box>\r\n    }\r\n  </Box>\r\n}","import { Route, BrowserRouter as Router, Switch as RouterSwitch } from 'react-router-dom';\n\nimport './App.css';\nimport { createMuiTheme, ThemeProvider, CssBaseline, Theme, makeStyles, Drawer, Toolbar, useMediaQuery } from '@material-ui/core';\nimport { TezosPriceProvider } from 'contexts/TezosPrice';\nimport MainAppBar from 'components/MainAppBar';\nimport { TezosAccountProvider } from 'contexts/TezosAccount';\nimport { TokenListProvider } from 'contexts/TokenList';\nimport { PropsWithChildren, useState } from 'react';\nimport TokenPage from 'pages/TokenPage';\nimport HomePage from 'pages/HomePage';\nimport { blue } from '@material-ui/core/colors';\nimport AccountBalanceList from 'components/AccountBalanceList';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function App(props: PropsWithChildren<{}>) {\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: blue,\n    },\n  });\n\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n  const toggleDrawer = () => {\n    setDrawerOpen(!isDrawerOpen);\n  }\n  const isDrawerPersistent = useMediaQuery(theme.breakpoints.up('xl'));\n  const drawerVariant = isDrawerPersistent ? 'persistent' : 'temporary';\n\n  return (\n    <div className={classes.root}>\n      <TezosPriceProvider>\n        <TezosAccountProvider>\n          <TokenListProvider>\n            <Router>\n              <ThemeProvider theme={theme}>\n                <CssBaseline></CssBaseline>\n                <MainAppBar onRightMenuClick={toggleDrawer}></MainAppBar>\n                <Drawer\n                  anchor=\"right\"\n                  open={isDrawerOpen}\n                  variant={drawerVariant}\n                  onClose={() => setDrawerOpen(false)}\n                >\n                  <Toolbar />\n                  <AccountBalanceList></AccountBalanceList>\n                </Drawer>\n                <RouterSwitch>\n                  <Route exact path=\"/\"><HomePage /></Route>\n                  <Route path=\"/token/:address/:tokenId\" children={<TokenPage />}></Route>\n                  <Route path=\"/token/:address\" children={<TokenPage />}></Route>\n                  {/* <Redirect from=\"/token/:address\" to=\"/token/:address/0\"></Redirect> */}\n                </RouterSwitch>\n              </ThemeProvider>\n            </Router>\n          </TokenListProvider>\n        </TezosAccountProvider>\n      </TezosPriceProvider>\n    </div>\n  )\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export async function fetchJson(url: string): Promise<any> {\r\n  return fetch(url).then((response) => {\r\n    if (response.status === 204) {\r\n      return {};\r\n    }\r\n    return response.json();\r\n  });\r\n}\r\n"],"sourceRoot":""}